{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","_ref","todos","onTodoSelected","todoId","_jsxs","className","children","_jsx","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","onQueryChange","onFilterChange","onDelete","query","filter","value","onChange","placeholder","style","pointerEvents","Loader","get","url","fullURL","delay","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","user","setUser","useState","useEffect","userId","concat","href","email","name","App","setTodos","selected","setSelected","setQuery","setFilter","_Fragment","event","target","handleDeleteQuery","todoList","filtredTodos","toLowerCase","includes","trim","item","handleCloseTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.494c2833.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface TodosProps {\n  todos: Todo[] | undefined\n  onTodoSelected: (item: Todo) => void\n  todoId?: number | undefined\n}\n\nexport const TodoList: React.FC<TodosProps> = ({\n  todos,\n  onTodoSelected,\n  todoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos?.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': todo.id === todoId },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                {\n                  'has-text-danger': todo.completed === false,\n                  'has-text-success': todo.completed === true,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelected(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye-slash': todo.id === todoId,\n                    'fa-eye': todo.id !== todoId,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\ninterface TodoFilterProps {\n  onQueryChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onFilterChange: (event: React.ChangeEvent<HTMLSelectElement>) => void\n  onDelete: () => void\n  query: string\n  filter: string\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  onQueryChange,\n  onFilterChange,\n  onDelete,\n  query,\n  filter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={onFilterChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={onQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onDelete}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface TodoModalProps {\n  todo: Todo\n  onClose: () => void\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  todo,\n  onClose,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, [user, todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>();\n  const [selected, setSelected] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, [todos]);\n\n  const filtredTodos = () => {\n    switch (filter) {\n      case 'all':\n        return todos;\n\n      case 'active':\n        return todos?.filter(todo => todo.completed === false);\n\n      case 'completed':\n        return todos?.filter(todo => todo.completed === true);\n\n      default:\n        return todos;\n    }\n  };\n\n  const queryFilter = (todoList: Todo[] | undefined) => {\n    return todoList?.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase().trim()));\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleDeleteQuery = () => {\n    setQuery('');\n  };\n\n  const handleSelectedChange = (item: Todo) => {\n    setSelected(item);\n  };\n\n  const handleCloseTodo = () => {\n    setSelected(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onQueryChange={handleQueryChange}\n                onFilterChange={handleFilterChange}\n                onDelete={handleDeleteQuery}\n                query={query}\n                filter={filter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={queryFilter(filtredTodos())}\n                    onTodoSelected={handleSelectedChange}\n                    todoId={selected?.id}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selected && <TodoModal todo={selected} onClose={handleCloseTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}